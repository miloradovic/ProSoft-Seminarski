package forme.klijent;

import domen.Klijent;
import domen.Mesto;
import domen.OpstiDomenskiObjekat;
import java.io.IOException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import kontroler.Kontroler;
import transfer.TransferObjekatOdgovor;
import util.Sesija;

/**
 *
 * @author Darko
 */
public class FrmUnosKlijenta extends javax.swing.JPanel {

    private int klijentId;

    /**
     * Creates new form FrmUnosKlijenta
     */
    public FrmUnosKlijenta() {
        initComponents();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        txtJbmg = new javax.swing.JTextField();
        txtUlicaBroj = new javax.swing.JTextField();
        jcbMesto = new javax.swing.JComboBox();
        btnSacuvaj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnOdustani = new javax.swing.JButton();

        jLabel1.setText("Ime: ");

        jLabel2.setText("Prezime: ");

        jLabel3.setText("JMBG: ");

        jLabel4.setText("Ulica i broj: ");

        jLabel5.setText("Mesto: ");

        jcbMesto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnOdustani.setText("Odustani");
        btnOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdustaniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcbMesto, 0, 250, Short.MAX_VALUE)
                            .addComponent(txtUlicaBroj)
                            .addComponent(txtJbmg)
                            .addComponent(txtPrezime)
                            .addComponent(txtIme)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSacuvaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnIzmeni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnObrisi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOdustani)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtJbmg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtUlicaBroj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcbMesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnIzmeni)
                    .addComponent(btnObrisi)
                    .addComponent(btnOdustani))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        if (isFieldEmpty()) {
            JOptionPane.showMessageDialog(this, "Niste popunili potrebna polja.");
            return;
        }
        try {
            String ime = txtIme.getText().trim();
            String prezime = txtPrezime.getText().trim();
            String jmbg = txtJbmg.getText().trim();
            String ulicaBroj = txtUlicaBroj.getText();
            Mesto mesto = (Mesto) jcbMesto.getSelectedItem();

            Klijent k = new Klijent(klijentId, ime, prezime, jmbg, ulicaBroj, mesto);

            TransferObjekatOdgovor toOdgovor = Kontroler.getInstance().zapamtiKlijenta(k);
            if (toOdgovor.getIzuzetak() == null) {
                JOptionPane.showMessageDialog(this, "Klijent je sacuvan.");
            } else {
                throw new Exception(toOdgovor.getIzuzetak());
            }
        } catch (Exception e) {
            System.out.println("Greska: " + e);
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        if (isFieldEmpty()) {
            JOptionPane.showMessageDialog(this, "Niste popunili potrebna polja.");
            return;
        }
        try {
            String ime = txtIme.getText().trim();
            String prezime = txtPrezime.getText().trim();
            String jmbg = txtJbmg.getText().trim();
            String ulicaBroj = txtUlicaBroj.getText();
            Mesto mesto = (Mesto) jcbMesto.getSelectedItem();

            Klijent k = new Klijent(klijentId, ime, prezime, jmbg, ulicaBroj, mesto);

            TransferObjekatOdgovor toOdgovor = Kontroler.getInstance().zapamtiKlijenta(k);
            if (toOdgovor.getIzuzetak() == null) {
                JOptionPane.showMessageDialog(this, "Klijent je izmenjen.");
            } else {
                throw new Exception(toOdgovor.getIzuzetak());
            }
        } catch (Exception e) {
            System.out.println("Greska: " + e);
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        try {
            Klijent k = new Klijent();
            k.setKlijentId(klijentId);

            TransferObjekatOdgovor toOdgovor = Kontroler.getInstance().obrisiKlijenta(k);
            if (toOdgovor.getIzuzetak() == null) {
                JOptionPane.showMessageDialog(this, "Klijent je obrisan.");
            } else {
                throw new Exception(toOdgovor.getIzuzetak());
            }
        } catch (Exception e) {
            System.out.println("Greska: " + e);
        }
        SwingUtilities.getWindowAncestor(this).dispose();
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdustaniActionPerformed
        SwingUtilities.getWindowAncestor(this).dispose();
    }//GEN-LAST:event_btnOdustaniActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOdustani;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox jcbMesto;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtJbmg;
    private javax.swing.JTextField txtPrezime;
    private javax.swing.JTextField txtUlicaBroj;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        try {
            List<OpstiDomenskiObjekat> listaMesta = Kontroler.getInstance().vratiMesta();
            jcbMesto.removeAllItems();
            for (OpstiDomenskiObjekat m : listaMesta) {
                jcbMesto.addItem(m);
            }
        } catch (IOException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

        Klijent k = (Klijent) Sesija.getInstance().get("izabrani_klijent");
        if (k != null) {
            // Operacija izmene ili brisanja
            btnSacuvaj.setVisible(false);

            klijentId = k.getKlijentId();
            txtIme.setText(k.getIme());
            txtPrezime.setText(k.getPrezime());
            txtJbmg.setText(k.getJmbg());
            txtUlicaBroj.setText(k.getUlicaBroj());
            jcbMesto.setSelectedItem(k.getMesto());
            Sesija.getInstance().remove("izabrani_klijent");
        } else {
            // Operacija unosa
            btnIzmeni.setVisible(false);
            btnObrisi.setVisible(false);
            klijentId = -1;
        }
    }

    private boolean isFieldEmpty() {
        return (txtIme.getText().isEmpty()
                || txtPrezime.getText().isEmpty()
                || txtJbmg.getText().isEmpty()
                || txtUlicaBroj.getText().isEmpty());
    }
}
